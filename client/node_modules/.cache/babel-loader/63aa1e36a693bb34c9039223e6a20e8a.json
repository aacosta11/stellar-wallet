{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\in-progress\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\TransactionFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionFormComponent = props => {\n  _s();\n\n  const [sourceAccount, setSourceAccount] = useState('');\n  const [onlyNumsTemp, setOnlyNumsTemp] = useState('');\n  const [transactionSequenceNumber, setTransactionSequenceNumber] = useState('');\n  const [baseFee, setBaseFee] = useState(100);\n  const [memo, setMemo] = useState('');\n  const [timeBounds, setTimeBounds] = useState('');\n\n  const handleNumberInputChange = e => {\n    let inputName = e.target.name;\n    let inputVariable = parseInt(e.target.value);\n\n    if (!inputVariable >= 0) {\n      setOnlyNumsTemp('');\n\n      if (inputName === \"transaction-sequence-number\") {\n        setTransactionSequenceNumber('');\n      } else if (inputName === \"base-fee\") {\n        setBaseFee('');\n      }\n    }\n\n    if (inputVariable.toString().match(/\\d/g)) {\n      setOnlyNumsTemp(inputVariable);\n\n      if (inputName === \"transaction-sequence-number\") {\n        setTransactionSequenceNumber(inputVariable);\n      } else if (inputName == \"base-fee\") {\n        setBaseFee(inputVariable);\n      }\n    } else {\n      if (inputName === \"transaction-sequence-number\") {\n        setTransactionSequenceNumber(onlyNumsTemp);\n      } else if (inputName == \"base-fee\") {\n        setBaseFee(onlyNumsTemp);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"transaction form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source-account\",\n        children: \"Source Account: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"source-account\",\n        value: sourceAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"transaction-sequence-number\",\n        children: \"Transaction Sequence Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"transaction-sequence-number\",\n        onChange: handleNumberInputChange,\n        value: transactionSequenceNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"base-fee\",\n        children: \"Base Fee: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"base-fee\",\n        onChange: handleNumberInputChange,\n        value: baseFee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), JSON.stringify(baseFee), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"memo\",\n        children: \"Memo: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"memo\",\n        value: memo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time-bounds\",\n        children: \"Time Bounds: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"time-bounds\",\n        value: timeBounds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TransactionFormComponent, \"vH52kkFr71JrVVNHWk5Zo1SvzOQ=\");\n\n_c = TransactionFormComponent;\nexport default TransactionFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/in-progress/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/TransactionFormComponent.jsx"],"names":["React","useState","TransactionFormComponent","props","sourceAccount","setSourceAccount","onlyNumsTemp","setOnlyNumsTemp","transactionSequenceNumber","setTransactionSequenceNumber","baseFee","setBaseFee","memo","setMemo","timeBounds","setTimeBounds","handleNumberInputChange","e","inputName","target","name","inputVariable","parseInt","value","toString","match","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TransactionFormComponent = props => {\r\n    const [sourceAccount,setSourceAccount] = useState('');\r\n    const [onlyNumsTemp,setOnlyNumsTemp] = useState('');\r\n    const [transactionSequenceNumber,setTransactionSequenceNumber] = useState('');\r\n    const [baseFee,setBaseFee] = useState(100);\r\n    const [memo,setMemo] = useState('');\r\n    const [timeBounds,setTimeBounds] = useState('');\r\n    const handleNumberInputChange = e => {\r\n        let inputName = e.target.name;\r\n        let inputVariable = parseInt(e.target.value);\r\n        if (!inputVariable >= 0) {\r\n            setOnlyNumsTemp('');\r\n            if (inputName === \"transaction-sequence-number\") {\r\n                setTransactionSequenceNumber('');\r\n            } else if (inputName === \"base-fee\") {\r\n                setBaseFee('');\r\n            }\r\n        }\r\n        if(inputVariable.toString().match(/\\d/g)) {\r\n            setOnlyNumsTemp(inputVariable);\r\n            if (inputName === \"transaction-sequence-number\") {\r\n                setTransactionSequenceNumber(inputVariable);\r\n            } else if (inputName == \"base-fee\") {\r\n                setBaseFee(inputVariable);\r\n            }\r\n        } else {\r\n            if (inputName === \"transaction-sequence-number\") {\r\n                setTransactionSequenceNumber(onlyNumsTemp);\r\n            } else if (inputName == \"base-fee\") {\r\n                setBaseFee(onlyNumsTemp);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <h4>transaction form</h4>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"source-account\">Source Account: </label>\r\n            <input type=\"text\" name=\"source-account\" value={sourceAccount}/>\r\n        </div>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"transaction-sequence-number\">Transaction Sequence Number: </label>\r\n            <input type=\"text\" name=\"transaction-sequence-number\"\r\n            onChange={handleNumberInputChange} value={transactionSequenceNumber}/>\r\n        </div>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"base-fee\">Base Fee: </label>\r\n            <input type=\"text\" name=\"base-fee\"\r\n            onChange={handleNumberInputChange} value={baseFee}/>\r\n        </div>\r\n        {JSON.stringify(baseFee)}\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"memo\">Memo: </label>\r\n            <input type=\"text\" name=\"memo\" value={memo}/>\r\n        </div>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"time-bounds\">Time Bounds: </label>\r\n            <input type=\"text\" name=\"time-bounds\" value={timeBounds}/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default TransactionFormComponent;"]},"metadata":{},"sourceType":"module"}