{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\in-progress\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\OperationForms\\\\PaymentFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FilterInputs from \"../../../Shared/FilterInputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentFormComponent = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const {\n    replaceSpecialCharacters,\n    onlyNumbers,\n    onlyIntegers\n  } = FilterInputs;\n  const [destination, setDestination] = useState('');\n  const [asset, setAsset] = useState('native');\n  const [amount, setAmount] = useState(0);\n  const [sourceAccount, setSourceAccount] = useState('');\n  const {\n    destination2 = '',\n    asset2 = ''\n  } = data;\n  const formData = {\n    'destination': destination,\n    'asset': asset,\n    'amount': amount,\n    'source-account': sourceAccount\n  };\n  const arrayOfInputNames = ['destination', 'asset', 'amount', 'source-account'];\n  useEffect(() => {\n    for (let x = 0; x < arrayOfInputNames.length; x++) {\n      if (!Object.keys(data).toString().includes(arrayOfInputNames[x])) {\n        data[arrayOfInputNames[x]] = '';\n      }\n    }\n  }, [data]);\n\n  const handleAmountInput = e => {\n    const inputName = e.target.name;\n    let inputValue = onlyNumbers(replaceSpecialCharacters(e.target.value));\n    if (inputName === \"amount\") setAmount(onlyIntegers(inputValue)); // data[inputName] = onlyIntegers(inputValue);\n  };\n\n  const handlePublicKeyInputs = e => {\n    const inputName = e.target.name;\n    let publicKeyFiltered = replaceSpecialCharacters(e.target.value).toUpperCase(); // data[inputName] = publicKeyFiltered;\n    // data[inputName] = replaceSpecialCharacters(e.target.value).toUpperCase();\n\n    inputName === \"destination\" ? setDestination(publicKeyFiltered) : setSourceAccount(publicKeyFiltered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"X X-fd-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"destination\",\n        children: \"Destination: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"destination\",\n        placeholder: \"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\",\n        onChange: handlePublicKeyInputs,\n        value: destination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"asset\",\n        children: \"Asset: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"asset\",\n        id: \"asset\",\n        onChange: e => setAsset(e.target.value),\n        value: asset,\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"native\",\n          children: \"Native\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alphanumeric-4\",\n          children: \"Alphanumeric 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alphanumeric-12\",\n          children: \"Alphanumeric 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"amount\",\n        onChange: handleAmountInput,\n        value: amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source-account\",\n        children: \"Source Account: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"source-account\",\n        placeholder: \"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\",\n        onChange: handlePublicKeyInputs,\n        value: sourceAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), JSON.stringify(data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentFormComponent, \"ls/OIT0dF53NJU+NaAMxPBgg4rM=\");\n\n_c = PaymentFormComponent;\nexport default PaymentFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/in-progress/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/OperationForms/PaymentFormComponent.jsx"],"names":["React","useState","useEffect","FilterInputs","PaymentFormComponent","data","replaceSpecialCharacters","onlyNumbers","onlyIntegers","destination","setDestination","asset","setAsset","amount","setAmount","sourceAccount","setSourceAccount","destination2","asset2","formData","arrayOfInputNames","x","length","Object","keys","toString","includes","handleAmountInput","e","inputName","target","name","inputValue","value","handlePublicKeyInputs","publicKeyFiltered","toUpperCase","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FilterInputs from \"../../../Shared/FilterInputs\";\r\nconst PaymentFormComponent = ({data}) => {\r\n    const { replaceSpecialCharacters, onlyNumbers, onlyIntegers } = FilterInputs;\r\n    const [destination,setDestination] = useState('');\r\n    const [asset,setAsset] = useState('native');\r\n    const [amount,setAmount] = useState(0);\r\n    const [sourceAccount,setSourceAccount] = useState('');\r\n\r\n    const { destination2='',asset2='', } = data;\r\n    const formData = {\r\n        'destination':destination,\r\n        'asset':asset,\r\n        'amount':amount,\r\n        'source-account':sourceAccount\r\n    }\r\n\r\n    const arrayOfInputNames = ['destination','asset','amount','source-account']\r\n    useEffect(()=>{\r\n        for (let x = 0; x < arrayOfInputNames.length; x ++) {\r\n            if (!Object.keys(data).toString().includes(arrayOfInputNames[x])) {\r\n                data[arrayOfInputNames[x]] = '';\r\n            }\r\n        }\r\n    },[data])\r\n\r\n    const handleAmountInput = e => {\r\n        const inputName = e.target.name;\r\n        let inputValue = onlyNumbers(replaceSpecialCharacters(e.target.value));\r\n        if (inputName === \"amount\") setAmount(onlyIntegers(inputValue));\r\n        // data[inputName] = onlyIntegers(inputValue);\r\n    }\r\n    const handlePublicKeyInputs = e => {\r\n        const inputName = e.target.name;\r\n        let publicKeyFiltered = replaceSpecialCharacters(e.target.value).toUpperCase();\r\n        // data[inputName] = publicKeyFiltered;\r\n        // data[inputName] = replaceSpecialCharacters(e.target.value).toUpperCase();\r\n        inputName === \"destination\" ? setDestination(publicKeyFiltered) : setSourceAccount(publicKeyFiltered);\r\n    }\r\n    return (\r\n        <div className=\"X X-fd-column\" >\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"destination\">Destination: </label>\r\n                <input type=\"text\" name=\"destination\" \r\n                placeholder=\"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\"\r\n                onChange={handlePublicKeyInputs} value={destination}\r\n                />\r\n            </div>\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"asset\">Asset: </label>\r\n                <select name=\"asset\" id=\"asset\" \r\n                onChange={e=>setAsset(e.target.value)} value={asset}\r\n                disabled\r\n                >\r\n                    <option value=\"native\">Native</option>\r\n                    <option value=\"alphanumeric-4\">Alphanumeric 4</option>\r\n                    <option value=\"alphanumeric-12\">Alphanumeric 12</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"amount\">Amount: </label>\r\n                <input type=\"text\" name=\"amount\" \r\n                onChange={handleAmountInput} value={amount}\r\n                />\r\n            </div>\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"source-account\">Source Account: </label>\r\n                <input type=\"text\" name=\"source-account\" \r\n                placeholder=\"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\"\r\n                onChange={handlePublicKeyInputs} value={sourceAccount}\r\n                />\r\n            </div>\r\n            {JSON.stringify(data)}\r\n        </div>\r\n    )\r\n}\r\nexport default PaymentFormComponent;"]},"metadata":{},"sourceType":"module"}