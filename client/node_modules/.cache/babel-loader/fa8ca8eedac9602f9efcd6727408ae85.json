{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\in-progress\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\TransactionFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionFormComponent = props => {\n  _s();\n\n  const [onlyNumsTemp, setOnlyNumsTemp] = useState('');\n  const [transactionSequenceNumber, setTransactionSequenceNumber] = useState(0);\n\n  const handleOnChange = e => {\n    if (e.target.value != Number) {\n      let numStr = parseInt(e.target.value);\n    } else {\n      let numStr = e.target.value;\n    }\n\n    console.log(typeof numStr);\n\n    if (!numStr >= 0) {\n      setOnlyNumsTemp('');\n      setTransactionSequenceNumber('');\n    }\n\n    if (numStr.toString().match(/\\d/g)) {\n      setOnlyNumsTemp(numStr);\n      setTransactionSequenceNumber(numStr);\n    } else {\n      setTransactionSequenceNumber(onlyNumsTemp);\n    }\n\n    console.log(numStr.toString().length);\n    console.log(numStr);\n    console.log(transactionSequenceNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"transaction form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source-account\",\n        children: \"Source Account: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"source-account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"transaction-sequence-number\",\n        children: \"Transaction Sequence Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"transaction-sequence-number\",\n        min: \"0\",\n        onChange: handleOnChange,\n        value: transactionSequenceNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TransactionFormComponent, \"aPJzRtYlT+iPqlPthmixxADFSfg=\");\n\n_c = TransactionFormComponent;\nexport default TransactionFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/in-progress/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/TransactionFormComponent.jsx"],"names":["React","useState","TransactionFormComponent","props","onlyNumsTemp","setOnlyNumsTemp","transactionSequenceNumber","setTransactionSequenceNumber","handleOnChange","e","target","value","Number","numStr","parseInt","console","log","toString","match","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,wBAAwB,GAAGC,KAAK,IAAI;AAAA;;AACtC,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCJ,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACK,yBAAD,EAA2BC,4BAA3B,IAA2DN,QAAQ,CAAC,CAAD,CAAzE;;AACA,QAAMO,cAAc,GAAGC,CAAC,IAAI;AACxB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkBC,MAAtB,EAA8B;AAC1B,UAAIC,MAAM,GAAGC,QAAQ,CAACL,CAAC,CAACC,MAAF,CAASC,KAAV,CAArB;AACH,KAFD,MAEO;AACH,UAAIE,MAAM,GAAGJ,CAAC,CAACC,MAAF,CAASC,KAAtB;AACH;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,MAAnB;;AACA,QAAI,CAACA,MAAD,IAAW,CAAf,EAAkB;AACdR,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,4BAA4B,CAAC,EAAD,CAA5B;AACH;;AACD,QAAGM,MAAM,CAACI,QAAP,GAAkBC,KAAlB,CAAwB,KAAxB,CAAH,EAAmC;AAC/Bb,MAAAA,eAAe,CAACQ,MAAD,CAAf;AACAN,MAAAA,4BAA4B,CAACM,MAAD,CAA5B;AACH,KAHD,MAGO;AACHN,MAAAA,4BAA4B,CAACH,YAAD,CAA5B;AACH;;AAEDW,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,QAAP,GAAkBE,MAA9B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,yBAAZ;AACH,GArBD;;AAsBA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAMA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,6BAAxB;AAAsD,QAAA,GAAG,EAAC,GAA1D;AACA,QAAA,QAAQ,EAAEE,cADV;AAC0B,QAAA,KAAK,EAAEF;AADjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADJ;AAeH,CAxCD;;GAAMJ,wB;;KAAAA,wB;AAyCN,eAAeA,wBAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TransactionFormComponent = props => {\r\n    const [onlyNumsTemp,setOnlyNumsTemp] = useState('');\r\n    const [transactionSequenceNumber,setTransactionSequenceNumber] = useState(0);\r\n    const handleOnChange = e => {\r\n        if (e.target.value != Number) {\r\n            let numStr = parseInt(e.target.value);\r\n        } else {\r\n            let numStr = e.target.value\r\n        }\r\n        console.log(typeof(numStr));\r\n        if (!numStr >= 0) {\r\n            setOnlyNumsTemp('');\r\n            setTransactionSequenceNumber('');\r\n        }\r\n        if(numStr.toString().match(/\\d/g)) {\r\n            setOnlyNumsTemp(numStr);\r\n            setTransactionSequenceNumber(numStr);\r\n        } else {\r\n            setTransactionSequenceNumber(onlyNumsTemp);\r\n        }\r\n        \r\n        console.log(numStr.toString().length);\r\n        console.log(numStr);\r\n        console.log(transactionSequenceNumber);\r\n    }\r\n    return (\r\n        <>\r\n        <h4>transaction form</h4>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"source-account\">Source Account: </label>\r\n            <input type=\"text\" name=\"source-account\" />\r\n        </div>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"transaction-sequence-number\">Transaction Sequence Number: </label>\r\n            <input type=\"text\" name=\"transaction-sequence-number\" min=\"0\"\r\n            onChange={handleOnChange} value={transactionSequenceNumber}/>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\nexport default TransactionFormComponent;"]},"metadata":{},"sourceType":"module"}