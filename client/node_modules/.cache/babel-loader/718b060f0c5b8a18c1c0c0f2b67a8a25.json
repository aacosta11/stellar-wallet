{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\code\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\OperationForms\\\\PaymentFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FilterInputs from \"../../../Shared/FilterInputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentFormComponent = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const {\n    replaceSpecialCharacters,\n    onlyNumbers,\n    onlyIntegers\n  } = FilterInputs;\n  const {\n    dataToDisplay,\n    setDataToDisplay\n  } = data;\n  const [paymentData, setPaymentData] = useState({ ...data\n  });\n\n  const handleAmountInput = e => {\n    const inputName = e.target.name;\n    let inputValue = onlyIntegers(onlyNumbers(replaceSpecialCharacters(e.target.value)));\n    setPaymentData({ ...paymentData,\n      [inputName]: [inputValue]\n    }); // data = {...paymentData};\n  };\n\n  const handlePublicKeyInputs = e => {\n    const inputName = e.target.name;\n    let publicKeyFiltered = replaceSpecialCharacters(e.target.value).toUpperCase();\n    setPaymentData({ ...paymentData,\n      [inputName]: [publicKeyFiltered]\n    }); // data = {...paymentData};\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"X X-fd-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"destination\",\n        children: \"Destination: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"destination\",\n        placeholder: \"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\",\n        onChange: handlePublicKeyInputs,\n        value: dataToDisplay.destination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"asset\",\n        children: \"Asset: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"asset\",\n        id: \"asset\",\n        onChange: e => setPaymentData({ ...dataToDisplay,\n          asset: [e.target.value]\n        }),\n        value: dataToDisplay.asset,\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"native\",\n          children: \"Native\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alphanumeric-4\",\n          children: \"Alphanumeric 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alphanumeric-12\",\n          children: \"Alphanumeric 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"amount\",\n        onChange: handleAmountInput,\n        value: dataToDisplay.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sourceAccount\",\n        children: \"Source Account: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"sourceAccount\",\n        placeholder: \"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\",\n        onChange: handlePublicKeyInputs,\n        value: dataToDisplay.sourceAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), JSON.stringify(dataToDisplay)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentFormComponent, \"c4/hoq8LRPIskE5Im6jqZDPZD5E=\");\n\n_c = PaymentFormComponent;\nexport default PaymentFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/code/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/OperationForms/PaymentFormComponent.jsx"],"names":["React","useState","FilterInputs","PaymentFormComponent","data","replaceSpecialCharacters","onlyNumbers","onlyIntegers","dataToDisplay","setDataToDisplay","paymentData","setPaymentData","handleAmountInput","e","inputName","target","name","inputValue","value","handlePublicKeyInputs","publicKeyFiltered","toUpperCase","destination","asset","amount","sourceAccount","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport FilterInputs from \"../../../Shared/FilterInputs\";\r\nconst PaymentFormComponent = ({data}) => {\r\n    const { replaceSpecialCharacters, onlyNumbers, onlyIntegers } = FilterInputs;\r\n    const { dataToDisplay, setDataToDisplay } = data;\r\n    const [paymentData,setPaymentData] = useState({...data})\r\n\r\n    const handleAmountInput = e => {\r\n        const inputName = e.target.name;\r\n        let inputValue = onlyIntegers(onlyNumbers(replaceSpecialCharacters(e.target.value)));\r\n        setPaymentData({...paymentData,[inputName]:[inputValue]});\r\n        // data = {...paymentData};\r\n    }\r\n    const handlePublicKeyInputs = e => {\r\n        const inputName = e.target.name;\r\n        let publicKeyFiltered = replaceSpecialCharacters(e.target.value).toUpperCase();\r\n        setPaymentData({...paymentData,[inputName]:[publicKeyFiltered]});\r\n        // data = {...paymentData};\r\n    }\r\n    return (\r\n        <div className=\"X X-fd-column\" >\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"destination\">Destination: </label>\r\n                <input type=\"text\" name=\"destination\" \r\n                placeholder=\"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\"\r\n                onChange={handlePublicKeyInputs} value={dataToDisplay.destination}\r\n                />\r\n            </div>\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"asset\">Asset: </label>\r\n                <select name=\"asset\" id=\"asset\" \r\n                onChange={e=>setPaymentData({...dataToDisplay,asset:[e.target.value]})} value={dataToDisplay.asset}\r\n                disabled\r\n                >\r\n                    <option value=\"native\">Native</option>\r\n                    <option value=\"alphanumeric-4\">Alphanumeric 4</option>\r\n                    <option value=\"alphanumeric-12\">Alphanumeric 12</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"amount\">Amount: </label>\r\n                <input type=\"text\" name=\"amount\" \r\n                onChange={handleAmountInput} value={dataToDisplay.amount}\r\n                />\r\n            </div>\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"sourceAccount\">Source Account: </label>\r\n                <input type=\"text\" name=\"sourceAccount\" \r\n                placeholder=\"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\"\r\n                onChange={handlePublicKeyInputs} value={dataToDisplay.sourceAccount}\r\n                />\r\n            </div>\r\n            {JSON.stringify(dataToDisplay)}\r\n        </div>\r\n    )\r\n}\r\nexport default PaymentFormComponent;"]},"metadata":{},"sourceType":"module"}