{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LiquidityPoolCallBuilder = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar call_builder_1 = require(\"./call_builder\");\n\nvar LiquidityPoolCallBuilder = function (_super) {\n  tslib_1.__extends(LiquidityPoolCallBuilder, _super);\n\n  function LiquidityPoolCallBuilder(serverUrl) {\n    var _this = _super.call(this, serverUrl) || this;\n\n    _this.url.segment(\"liquidity_pools\");\n\n    return _this;\n  }\n\n  LiquidityPoolCallBuilder.prototype.forAssets = function () {\n    var assets = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      assets[_i] = arguments[_i];\n    }\n\n    var assetList = assets.map(function (asset) {\n      return asset.toString();\n    }).join(\",\");\n    this.url.setQuery(\"reserves\", assetList);\n    return this;\n  };\n\n  LiquidityPoolCallBuilder.prototype.forAccount = function (id) {\n    this.url.setQuery(\"account\", id);\n    return this;\n  };\n\n  LiquidityPoolCallBuilder.prototype.liquidityPoolId = function (id) {\n    if (!id.match(/[a-fA-F0-9]{64}/)) {\n      throw new TypeError(id + \" does not look like a liquidity pool ID\");\n    }\n\n    var builder = new call_builder_1.CallBuilder(this.url.clone());\n    builder.filter.push([id.toLowerCase()]);\n    return builder;\n  };\n\n  return LiquidityPoolCallBuilder;\n}(call_builder_1.CallBuilder);\n\nexports.LiquidityPoolCallBuilder = LiquidityPoolCallBuilder;","map":{"version":3,"sources":["../src/liquidity_pool_call_builder.ts"],"names":[],"mappings":";;;;;;;;;AAEA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAYA,IAAA,wBAAA,GAAA,UAAA,MAAA,EAAA;AAA8C,EAAA,OAAA,CAAA,SAAA,CAAA,wBAAA,EAAA,MAAA;;AAG5C,WAAA,wBAAA,CAAY,SAAZ,EAA0B;AAA1B,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAN,KAAgB,IADlB;;AAEE,IAAA,KAAI,CAAC,GAAL,CAAS,OAAT,CAAiB,iBAAjB;;;AACD;;AASM,EAAA,wBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AAAiB,QAAA,MAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAkB;AAAlB,MAAA,MAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACf,QAAM,SAAS,GAAW,MAAM,CAC7B,GADuB,CACnB,UAAC,KAAD,EAAa;AAAK,aAAA,KAAK,CAAL,QAAA,EAAA;AAAgB,KADf,EAEvB,IAFuB,CAElB,GAFkB,CAA1B;AAGA,SAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,SAA9B;AACA,WAAO,IAAP;AACD,GANM;;AAcA,EAAA,wBAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,EAAlB,EAA4B;AAC1B,SAAK,GAAL,CAAS,QAAT,CAAkB,SAAlB,EAA6B,EAA7B;AACA,WAAO,IAAP;AACD,GAHM;;AAWA,EAAA,wBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UACE,EADF,EACY;AAEV,QAAI,CAAC,EAAE,CAAC,KAAH,CAAS,iBAAT,CAAL,EAAkC;AAChC,YAAM,IAAI,SAAJ,CAAiB,EAAE,GAAA,yCAAnB,CAAN;AACD;;AAED,QAAM,OAAO,GAAG,IAAI,cAAA,CAAA,WAAJ,CACd,KAAK,GAAL,CAAS,KAAT,EADc,CAAhB;AAGA,IAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAC,EAAE,CAAC,WAAH,EAAD,CAApB;AACA,WAAO,OAAP;AACD,GAZM;;AAaT,SAAA,wBAAA;AAAC,CArDD,CAA8C,cAAA,CAAA,WAA9C,CAAA;;AAAa,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LiquidityPoolCallBuilder = void 0;\nvar tslib_1 = require(\"tslib\");\nvar call_builder_1 = require(\"./call_builder\");\nvar LiquidityPoolCallBuilder = (function (_super) {\n    tslib_1.__extends(LiquidityPoolCallBuilder, _super);\n    function LiquidityPoolCallBuilder(serverUrl) {\n        var _this = _super.call(this, serverUrl) || this;\n        _this.url.segment(\"liquidity_pools\");\n        return _this;\n    }\n    LiquidityPoolCallBuilder.prototype.forAssets = function () {\n        var assets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            assets[_i] = arguments[_i];\n        }\n        var assetList = assets\n            .map(function (asset) { return asset.toString(); })\n            .join(\",\");\n        this.url.setQuery(\"reserves\", assetList);\n        return this;\n    };\n    LiquidityPoolCallBuilder.prototype.forAccount = function (id) {\n        this.url.setQuery(\"account\", id);\n        return this;\n    };\n    LiquidityPoolCallBuilder.prototype.liquidityPoolId = function (id) {\n        if (!id.match(/[a-fA-F0-9]{64}/)) {\n            throw new TypeError(id + \" does not look like a liquidity pool ID\");\n        }\n        var builder = new call_builder_1.CallBuilder(this.url.clone());\n        builder.filter.push([id.toLowerCase()]);\n        return builder;\n    };\n    return LiquidityPoolCallBuilder;\n}(call_builder_1.CallBuilder));\nexports.LiquidityPoolCallBuilder = LiquidityPoolCallBuilder;\n"]},"metadata":{},"sourceType":"script"}