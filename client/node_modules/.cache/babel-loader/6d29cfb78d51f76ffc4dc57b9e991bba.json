{"ast":null,"code":"const ManageOperations = () => {\n  setOperationForThisOne = (operation, id) => {\n    // change selected operation\n    let operationArrayCopy = [...currentOperations];\n    operationArrayCopy.find((op, i) => op.id === id).operation = operation;\n    setCurrentOperations(operationArrayCopy);\n  }, addAnOperation = () => {\n    // add blank operation\n    let operationArrayCopy = [...currentOperations];\n    operationArrayCopy.push({\n      operation: '',\n      operationData: '',\n      id: operationArrayCopy[operationArrayCopy.length - 1].id + 1\n    });\n    setCurrentOperations(operationArrayCopy);\n  }, duplicateThisOperation = (operation, id) => {\n    // duplicate operation\n    let operationArrayCopy = [...currentOperations];\n    let operationToCopy = operationArrayCopy.find((op, i) => op.id === id); // XXX\n\n    operationArrayCopy.push({ ...operationToCopy,\n      id: operationArrayCopy[operationArrayCopy.length - 1].id + 1\n    });\n    setCurrentOperations(operationArrayCopy);\n  }, deleteThisOperation = id => {\n    // delete operation\n    let operationArrayCopy = currentOperations.filter((op, i) => op.id !== id);\n    console.log(operationArrayCopy);\n    setCurrentOperations(operationArrayCopy);\n  };\n};\n\n_c = ManageOperations;\nexport default ManageOperations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageOperations\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/in-progress/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/Options/ManageOperations.jsx"],"names":["ManageOperations","setOperationForThisOne","operation","id","operationArrayCopy","currentOperations","find","op","i","setCurrentOperations","addAnOperation","push","operationData","length","duplicateThisOperation","operationToCopy","deleteThisOperation","filter","console","log"],"mappings":"AACA,MAAMA,gBAAgB,GAAG,MAAM;AAC3BC,EAAAA,sBAAsB,GAAG,CAACC,SAAD,EAAWC,EAAX,KAAkB;AAAE;AACzC,QAAIC,kBAAkB,GAAG,CAAC,GAAGC,iBAAJ,CAAzB;AACAD,IAAAA,kBAAkB,CAACE,IAAnB,CAAwB,CAACC,EAAD,EAAIC,CAAJ,KAAQD,EAAE,CAACJ,EAAH,KAAUA,EAA1C,EAA8CD,SAA9C,GAA0DA,SAA1D;AACAO,IAAAA,oBAAoB,CAACL,kBAAD,CAApB;AACH,GAJD,EAKAM,cAAc,GAAG,MAAM;AAAE;AACrB,QAAIN,kBAAkB,GAAG,CAAC,GAAGC,iBAAJ,CAAzB;AACAD,IAAAA,kBAAkB,CAACO,IAAnB,CAAwB;AAACT,MAAAA,SAAS,EAAC,EAAX;AAAcU,MAAAA,aAAa,EAAE,EAA7B;AAAgCT,MAAAA,EAAE,EAACC,kBAAkB,CAACA,kBAAkB,CAACS,MAAnB,GAA4B,CAA7B,CAAlB,CAAkDV,EAAlD,GAAuD;AAA1F,KAAxB;AACAM,IAAAA,oBAAoB,CAACL,kBAAD,CAApB;AACH,GATD,EAUAU,sBAAsB,GAAG,CAACZ,SAAD,EAAWC,EAAX,KAAkB;AAAE;AACzC,QAAIC,kBAAkB,GAAG,CAAC,GAAGC,iBAAJ,CAAzB;AACA,QAAIU,eAAe,GAAGX,kBAAkB,CAACE,IAAnB,CAAwB,CAACC,EAAD,EAAIC,CAAJ,KAAQD,EAAE,CAACJ,EAAH,KAAUA,EAA1C,CAAtB,CAFuC,CAE8B;;AACrEC,IAAAA,kBAAkB,CAACO,IAAnB,CAAwB,EAAC,GAAGI,eAAJ;AAAoBZ,MAAAA,EAAE,EAACC,kBAAkB,CAACA,kBAAkB,CAACS,MAAnB,GAA4B,CAA7B,CAAlB,CAAkDV,EAAlD,GAAuD;AAA9E,KAAxB;AACAM,IAAAA,oBAAoB,CAACL,kBAAD,CAApB;AACH,GAfD,EAgBAY,mBAAmB,GAAGb,EAAE,IAAI;AAAE;AAC1B,QAAIC,kBAAkB,GAAGC,iBAAiB,CAACY,MAAlB,CAAyB,CAACV,EAAD,EAAIC,CAAJ,KAAQD,EAAE,CAACJ,EAAH,KAAWA,EAA5C,CAAzB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYf,kBAAZ;AACAK,IAAAA,oBAAoB,CAACL,kBAAD,CAApB;AACH,GApBD;AAqBH,CAtBD;;KAAMJ,gB;AAuBN,eAAeA,gBAAf","sourcesContent":["\r\nconst ManageOperations = () => {\r\n    setOperationForThisOne = (operation,id) => { // change selected operation\r\n        let operationArrayCopy = [...currentOperations];\r\n        operationArrayCopy.find((op,i)=>op.id === id).operation = operation;\r\n        setCurrentOperations(operationArrayCopy);\r\n    },\r\n    addAnOperation = () => { // add blank operation\r\n        let operationArrayCopy = [...currentOperations];\r\n        operationArrayCopy.push({operation:'',operationData: '',id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\r\n        setCurrentOperations(operationArrayCopy);\r\n    },\r\n    duplicateThisOperation = (operation,id) => { // duplicate operation\r\n        let operationArrayCopy = [...currentOperations];\r\n        let operationToCopy = operationArrayCopy.find((op,i)=>op.id === id); // XXX\r\n        operationArrayCopy.push({...operationToCopy,id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\r\n        setCurrentOperations(operationArrayCopy);\r\n    },\r\n    deleteThisOperation = id => { // delete operation\r\n        let operationArrayCopy = currentOperations.filter((op,i)=>op.id  !== id);\r\n        console.log(operationArrayCopy)\r\n        setCurrentOperations(operationArrayCopy);\r\n    }\r\n}\r\nexport default ManageOperations;"]},"metadata":{},"sourceType":"module"}