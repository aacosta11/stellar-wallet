{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\in-progress\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\TransactionFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionFormComponent = props => {\n  _s();\n\n  const numRegex = /-/g;\n  const [onlyNumsTemp, setOnlyNumsTemp] = useState('');\n  const [transactionSequenceNumber, setTransactionSequenceNumber] = useState(0);\n\n  const handleOnChange = e => {\n    console.log(e.target.value.length);\n\n    if (e.target.value.match(/\\d|\\./g) && e.target.length != 0) {\n      setTransactionSequenceNumber(e.target.value);\n      setOnlyNumsTemp(e.target.value);\n    } else {\n      setTransactionSequenceNumber(onlyNumsTemp);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"transaction form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source-account\",\n        children: \"Source Account: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"source-account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"transaction-sequence-number\",\n        children: \"Transaction Sequence Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"transaction-sequence-number\",\n        min: \"0\",\n        onChange: handleOnChange,\n        value: transactionSequenceNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TransactionFormComponent, \"aPJzRtYlT+iPqlPthmixxADFSfg=\");\n\n_c = TransactionFormComponent;\nexport default TransactionFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/in-progress/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/TransactionFormComponent.jsx"],"names":["React","useState","TransactionFormComponent","props","numRegex","onlyNumsTemp","setOnlyNumsTemp","transactionSequenceNumber","setTransactionSequenceNumber","handleOnChange","e","console","log","target","value","length","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,wBAAwB,GAAGC,KAAK,IAAI;AAAA;;AACtC,QAAMC,QAAQ,GAAG,IAAjB;AACA,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCL,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACM,yBAAD,EAA2BC,4BAA3B,IAA2DP,QAAQ,CAAC,CAAD,CAAzE;;AACA,QAAMQ,cAAc,GAAGC,CAAC,IAAI;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,MAA3B;;AAEA,QAAGL,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeE,KAAf,CAAqB,QAArB,KAAkCN,CAAC,CAACG,MAAF,CAASE,MAAT,IAAmB,CAAxD,EAA2D;AACvDP,MAAAA,4BAA4B,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAA5B;AACAR,MAAAA,eAAe,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf;AACH,KAHD,MAGO;AACHN,MAAAA,4BAA4B,CAACH,YAAD,CAA5B;AACH;AACJ,GATD;;AAUA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAMA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,6BAA1B;AAAwD,QAAA,GAAG,EAAC,GAA5D;AACA,QAAA,QAAQ,EAAEI,cADV;AAC0B,QAAA,KAAK,EAAEF;AADjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADJ;AAeH,CA7BD;;GAAML,wB;;KAAAA,wB;AA8BN,eAAeA,wBAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TransactionFormComponent = props => {\r\n    const numRegex = /-/g\r\n    const [onlyNumsTemp,setOnlyNumsTemp] = useState('');\r\n    const [transactionSequenceNumber,setTransactionSequenceNumber] = useState(0);\r\n    const handleOnChange = e => {\r\n        console.log(e.target.value.length);\r\n\r\n        if(e.target.value.match(/\\d|\\./g) && e.target.length != 0) {\r\n            setTransactionSequenceNumber(e.target.value);\r\n            setOnlyNumsTemp(e.target.value);\r\n        } else {\r\n            setTransactionSequenceNumber(onlyNumsTemp);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <h4>transaction form</h4>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"source-account\">Source Account: </label>\r\n            <input type=\"text\" name=\"source-account\" />\r\n        </div>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"transaction-sequence-number\">Transaction Sequence Number: </label>\r\n            <input type=\"number\" name=\"transaction-sequence-number\" min=\"0\"\r\n            onChange={handleOnChange} value={transactionSequenceNumber}/>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\nexport default TransactionFormComponent;"]},"metadata":{},"sourceType":"module"}