{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\in-progress\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\OperationFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport ChooseOperationComponent from \"./ChooseOperationComponent\";\nimport AllOperations from \"./OperationForms/AllOperations\";\nimport TransactionContext from \"../../../Context/TransactionContext\"; // import ManageOperations from \"./Options/ManageOperations\";\n\nimport \"../../../Styles/operation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OperationFormComponent = props => {\n  _s();\n\n  const {\n    operations,\n    setOperations\n  } = useContext(TransactionContext); // look at BuildTransaction.jsx for context provider\n\n  const allOperations = { ...AllOperations\n  }; // const { setOperationForThisOne, addAnOperation, duplicateThisOperation, deleteThisOperation } = ManageOperations;\n\n  const [currentOperations, setCurrentOperations] = useState([{\n    operation: '',\n    operationData: '',\n    id: 1\n  }]);\n\n  const handleFormData = e => {};\n\n  const handleOperationFocus = e => {// console.log(e.target.parentElement.parentElement.ariaLabel)\n  }; // MANAGE OPERATIONS\n\n\n  const setOperationForThisOne = (operation, id) => {\n    // change selected operation\n    let operationArrayCopy = [...currentOperations];\n    operationArrayCopy.find((op, i) => op.id === id).operation = operation;\n    setCurrentOperations(operationArrayCopy);\n  };\n\n  const addAnOperation = () => {\n    // add blank operation\n    let operationArrayCopy = [...currentOperations];\n    operationArrayCopy.push({\n      operation: '',\n      operationData: '',\n      id: operationArrayCopy[operationArrayCopy.length - 1].id + 1\n    });\n    setCurrentOperations(operationArrayCopy);\n  };\n\n  const duplicateThisOperation = (operation, id) => {\n    // duplicate operation\n    let operationArrayCopy = [...currentOperations];\n    let operationToCopy = operationArrayCopy.find((op, i) => op.id === id); // XXX\n\n    operationArrayCopy.push({ ...operationToCopy,\n      id: operationArrayCopy[operationArrayCopy.length - 1].id + 1\n    });\n    setCurrentOperations(operationArrayCopy);\n  };\n\n  const deleteThisOperation = id => {\n    // delete operation\n    let operationArrayCopy = currentOperations.filter((op, i) => op.id !== id);\n    console.log(operationArrayCopy);\n    setCurrentOperations(operationArrayCopy);\n  }; // END OF MANAGE OPERATIONS\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"X X-fd-column row-gap-2-rem\",\n    children: [currentOperations.map((op, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"X column-gap-1-rem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"X X-fd-column X-ai-center row-gap-4-px\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"X X-jc-center X-ai-center operation-number-box\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duplicate-operation\",\n            onClick: e => duplicateThisOperation(op.operation, op.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), i !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete-operation transition-ease\",\n            onClick: e => deleteThisOperation(op.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"X X-fd-column width-100-percent\",\n          children: [/*#__PURE__*/_jsxDEV(ChooseOperationComponent, {\n            setOperation: {\n              setOperationForThisOne\n            },\n            currentOperation: op.operation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: op.id,\n            onFocus: handleOperationFocus,\n            children: allOperations[op.operation]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-100-percent X X-jc-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"add-operation\",\n        className: \"transition-ease\",\n        onClick: addAnOperation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), JSON.stringify(currentOperations)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OperationFormComponent, \"sUy8yJDDOP/TxH9Bq4LfdAADdyE=\");\n\n_c = OperationFormComponent;\nexport default OperationFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperationFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/in-progress/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/OperationFormComponent.jsx"],"names":["React","useState","useContext","ChooseOperationComponent","AllOperations","TransactionContext","OperationFormComponent","props","operations","setOperations","allOperations","currentOperations","setCurrentOperations","operation","operationData","id","handleFormData","e","handleOperationFocus","setOperationForThisOne","operationArrayCopy","find","op","i","addAnOperation","push","length","duplicateThisOperation","operationToCopy","deleteThisOperation","filter","console","log","map","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport ChooseOperationComponent from \"./ChooseOperationComponent\";\r\nimport AllOperations from \"./OperationForms/AllOperations\";\r\nimport TransactionContext from \"../../../Context/TransactionContext\";\r\n// import ManageOperations from \"./Options/ManageOperations\";\r\nimport \"../../../Styles/operation.css\";\r\nconst OperationFormComponent = props => {\r\n    const { operations, setOperations } = useContext(TransactionContext); // look at BuildTransaction.jsx for context provider\r\n    const allOperations = {...AllOperations};\r\n    // const { setOperationForThisOne, addAnOperation, duplicateThisOperation, deleteThisOperation } = ManageOperations;\r\n    const [currentOperations, setCurrentOperations] = useState([{operation:'', operationData: '', id:1}]);\r\n    \r\n    const handleFormData = e => {\r\n\r\n    }\r\n\r\n    const handleOperationFocus = e => {\r\n        // console.log(e.target.parentElement.parentElement.ariaLabel)\r\n    }\r\n\r\n    // MANAGE OPERATIONS\r\n    const setOperationForThisOne = (operation,id) => { // change selected operation\r\n        let operationArrayCopy = [...currentOperations];\r\n        operationArrayCopy.find((op,i)=>op.id === id).operation = operation;\r\n        setCurrentOperations(operationArrayCopy);\r\n    }\r\n    const addAnOperation = () => { // add blank operation\r\n        let operationArrayCopy = [...currentOperations];\r\n        operationArrayCopy.push({operation:'',operationData: '',id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\r\n        setCurrentOperations(operationArrayCopy);\r\n    }\r\n    const duplicateThisOperation = (operation,id) => { // duplicate operation\r\n        let operationArrayCopy = [...currentOperations];\r\n        let operationToCopy = operationArrayCopy.find((op,i)=>op.id === id); // XXX\r\n        operationArrayCopy.push({...operationToCopy,id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\r\n        setCurrentOperations(operationArrayCopy);\r\n    }\r\n    const deleteThisOperation = id => { // delete operation\r\n        let operationArrayCopy = currentOperations.filter((op,i)=>op.id  !== id);\r\n        console.log(operationArrayCopy)\r\n        setCurrentOperations(operationArrayCopy);\r\n    }\r\n    // END OF MANAGE OPERATIONS\r\n\r\n    return (\r\n        <div className=\"X X-fd-column row-gap-2-rem\">\r\n            {/* display all operations from array */}\r\n            {currentOperations.map((op,i)=>{\r\n                return (\r\n                    <div className=\"X column-gap-1-rem\" key={i}>\r\n                        <div className=\"X X-fd-column X-ai-center row-gap-4-px\">\r\n                            {/* list placement number */}\r\n                            <div className=\"X X-jc-center X-ai-center operation-number-box\">\r\n                                <h4>{i + 1}</h4>\r\n                            </div>\r\n                            {/* DUPLICATE */}\r\n                            <div className=\"duplicate-operation\" onClick={e=>duplicateThisOperation(op.operation,op.id)}></div>\r\n                            {/* DELETE */}\r\n                            {i !== 0 && <div className=\"delete-operation transition-ease\" onClick={e=>deleteThisOperation(op.id)}></div>}\r\n                        </div>\r\n                        <div className=\"X X-fd-column width-100-percent\">\r\n                            {/* select operation type */}\r\n                            <ChooseOperationComponent setOperation={{setOperationForThisOne}} currentOperation={op.operation}/>\r\n                            {/* operation form */}\r\n                            <div id={op.id} onFocus={handleOperationFocus}>\r\n\r\n                        {allOperations[op.operation]}   \r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            <div className=\"width-100-percent X X-jc-center\">\r\n                {/* add a blank operation */}\r\n                <div id=\"add-operation\" className=\"transition-ease\" onClick={addAnOperation}></div>\r\n            </div>\r\n\r\n            {JSON.stringify(currentOperations)}\r\n        </div>\r\n    )\r\n}\r\nexport default OperationFormComponent;"]},"metadata":{},"sourceType":"module"}