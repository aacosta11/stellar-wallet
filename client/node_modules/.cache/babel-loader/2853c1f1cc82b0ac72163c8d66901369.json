{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\in-progress\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\TransactionFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FilterInputs from \"../../Shared/FilterInputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionFormComponent = props => {\n  _s();\n\n  const {\n    replaceSpecialCharacters,\n    onlyNumbers,\n    onlyIntegers\n  } = FilterInputs;\n  const [sourceAccount, setSourceAccount] = useState('');\n  const [transactionSequenceNumber, setTransactionSequenceNumber] = useState('');\n  const [baseFee, setBaseFee] = useState(100);\n  const [memo, setMemo] = useState('');\n  const [timeBounds, setTimeBounds] = useState(0); // handle all number inputs\n\n  const handleNumberInputChange = e => {\n    // store element data\n    let inputName = e.target.name;\n    let inputVariable = onlyNumbers(replaceSpecialCharacters(e.target.value)); // set appropriate state variables to input value\n\n    if (inputName === \"transaction-sequence-number\") setTransactionSequenceNumber(inputVariable);else if (inputName === \"base-fee\") setBaseFee(onlyIntegers(inputVariable));else if (inputName === \"time-bounds\") setTimeBounds(onlyIntegers(inputVariable));\n  }; // handle source account input\n\n\n  const handleSourceAccountChange = e => setSourceAccount(replaceSpecialCharacters(e.target.value).toUpperCase());\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"TransactionFormComponent.jsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source-account\",\n        children: \"Source Account: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"source-account\",\n        onChange: handleSourceAccountChange,\n        value: sourceAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"transaction-sequence-number\",\n        children: \"Transaction Sequence Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"transaction-sequence-number\",\n        onChange: handleNumberInputChange,\n        value: transactionSequenceNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"base-fee\",\n        children: \"Base Fee: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"base-fee\",\n        onChange: handleNumberInputChange,\n        value: baseFee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"memo\",\n        children: \"Memo: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"memo\",\n        onChange: e => setMemo(e.target.value),\n        value: memo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time-bounds\",\n        children: \"Time Bounds: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"time-bounds\",\n        onChange: handleNumberInputChange,\n        value: timeBounds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionFormComponent, \"GALAGOY2DeszNrw0TLHt+ZXVPbk=\");\n\n_c = TransactionFormComponent;\nexport default TransactionFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/in-progress/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/TransactionFormComponent.jsx"],"names":["React","useState","FilterInputs","TransactionFormComponent","props","replaceSpecialCharacters","onlyNumbers","onlyIntegers","sourceAccount","setSourceAccount","transactionSequenceNumber","setTransactionSequenceNumber","baseFee","setBaseFee","memo","setMemo","timeBounds","setTimeBounds","handleNumberInputChange","e","inputName","target","name","inputVariable","value","handleSourceAccountChange","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport FilterInputs from \"../../Shared/FilterInputs\";\r\nconst TransactionFormComponent = props => {\r\n    const { replaceSpecialCharacters, onlyNumbers, onlyIntegers } = FilterInputs;\r\n    const [sourceAccount,setSourceAccount] = useState('');\r\n    const [transactionSequenceNumber,setTransactionSequenceNumber] = useState('');\r\n    const [baseFee,setBaseFee] = useState(100);\r\n    const [memo,setMemo] = useState('');\r\n    const [timeBounds,setTimeBounds] = useState(0);\r\n\r\n    // handle all number inputs\r\n    const handleNumberInputChange = e => {\r\n        // store element data\r\n        let inputName = e.target.name;\r\n        let inputVariable = onlyNumbers(replaceSpecialCharacters(e.target.value));\r\n        // set appropriate state variables to input value\r\n        if (inputName === \"transaction-sequence-number\") setTransactionSequenceNumber(inputVariable);\r\n        else if (inputName === \"base-fee\") setBaseFee(onlyIntegers(inputVariable));\r\n        else if (inputName === \"time-bounds\") setTimeBounds(onlyIntegers(inputVariable));\r\n    };\r\n\r\n    // handle source account input\r\n    const handleSourceAccountChange = e => setSourceAccount(replaceSpecialCharacters(e.target.value).toUpperCase());\r\n\r\n    return (\r\n        <div>\r\n            <h4>TransactionFormComponent.jsx</h4>\r\n\r\n            {/* Source Account */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"source-account\">Source Account: </label>\r\n                <input type=\"text\" name=\"source-account\"\r\n                onChange={handleSourceAccountChange} value={sourceAccount}\r\n                />\r\n            </div>\r\n\r\n            {/* Transaction Sequence Number */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"transaction-sequence-number\">Transaction Sequence Number: </label>\r\n                <input type=\"text\" name=\"transaction-sequence-number\"\r\n                onChange={handleNumberInputChange} value={transactionSequenceNumber}/>\r\n            </div>\r\n\r\n            {/* Base Fee */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"base-fee\">Base Fee: </label>\r\n                <input type=\"text\" name=\"base-fee\"\r\n                onChange={handleNumberInputChange} value={baseFee}/>\r\n            </div>\r\n\r\n            {/* Memo */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"memo\">Memo: </label>\r\n                <input type=\"text\" name=\"memo\" \r\n                onChange={e=>setMemo(e.target.value)} value={memo}/>\r\n            </div>\r\n\r\n            {/* Time Bounds */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"time-bounds\">Time Bounds: </label>\r\n                <input type=\"text\" name=\"time-bounds\"\r\n                onChange={handleNumberInputChange} value={timeBounds}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default TransactionFormComponent;"]},"metadata":{},"sourceType":"module"}