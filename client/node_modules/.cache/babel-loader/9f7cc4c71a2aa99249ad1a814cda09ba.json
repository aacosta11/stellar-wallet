{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\code\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\OperationFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport ChooseOperationComponent from \"./ChooseOperationComponent\";\nimport DisplayOperations from \"./OperationForms/DisplayOperations\";\nimport TransactionContext from \"../../../Context/TransactionContext\";\nimport \"../../../Styles/operation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OperationFormComponent = props => {\n  _s();\n\n  const {\n    operations,\n    setOperations\n  } = useContext(TransactionContext); // look at BuildTransaction.jsx for context provider\n\n  const handleOperationDataChange = (id, e) => {\n    setTimeout(() => {\n      let operationArrayCopy = [...operations];\n      let operationToUpdate = operationArrayCopy.find(op => op.id === id);\n      operationToUpdate.operationData = { ...operationToUpdate.operationData,\n        [e.name]: [e.value]\n      };\n      setOperations(operationArrayCopy);\n    }, 50);\n  }; // MANAGE OPERATIONS\n\n\n  const setOperationForThisOne = (operation, id) => {\n    // change selected operation\n    let operationArrayCopy = [...operations];\n    operationArrayCopy.find((op, i) => op.id === id).operation = operation;\n    setOperations(operationArrayCopy);\n  };\n\n  const addAnOperation = () => {\n    // add blank operation\n    let operationArrayCopy = [...operations];\n    operationArrayCopy.push({\n      operation: '',\n      operationData: {},\n      id: operationArrayCopy[operationArrayCopy.length - 1].id + 1\n    });\n    setOperations(operationArrayCopy);\n  };\n\n  const duplicateThisOperation = (operation, id) => {\n    // duplicate operation\n    let operationArrayCopy = [...operations];\n    let operationToCopy = operationArrayCopy.find((op, i) => op.id === id);\n    operationArrayCopy.push({ ...operationToCopy,\n      id: operationArrayCopy[operationArrayCopy.length - 1].id + 1\n    });\n    setOperations(operationArrayCopy);\n  };\n\n  const deleteThisOperation = id => {\n    // delete operation\n    let operationArrayCopy = operations.filter((op, i) => op.id !== id);\n    setOperations(operationArrayCopy);\n  }; // END OF MANAGE OPERATIONS\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"X X-fd-column row-gap-2-rem\",\n    children: [operations.map((op, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"X column-gap-1-rem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"X X-fd-column X-ai-center row-gap-4-px\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"X X-jc-center X-ai-center operation-number-box\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duplicate-operation\",\n            onClick: e => duplicateThisOperation(op.operation, op.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), operations.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete-operation transition-ease\",\n            onClick: e => deleteThisOperation(op.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"X X-fd-column width-100-percent\",\n          children: [/*#__PURE__*/_jsxDEV(ChooseOperationComponent, {\n            setOperation: {\n              setOperationForThisOne\n            },\n            currentOperation: op.operation,\n            id: op.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: op.id,\n            onChange: e => handleOperationDataChange(op.id, e.target),\n            children: /*#__PURE__*/_jsxDEV(DisplayOperations, {\n              operation: op.operation,\n              data: op.operationData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-100-percent X X-jc-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"add-operation\",\n        className: \"transition-ease\",\n        onClick: addAnOperation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OperationFormComponent, \"pd7wsUZ7Dj//CrZhDztGctkxP70=\");\n\n_c = OperationFormComponent;\nexport default OperationFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperationFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/code/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/OperationFormComponent.jsx"],"names":["React","useContext","ChooseOperationComponent","DisplayOperations","TransactionContext","OperationFormComponent","props","operations","setOperations","handleOperationDataChange","id","e","setTimeout","operationArrayCopy","operationToUpdate","find","op","operationData","name","value","setOperationForThisOne","operation","i","addAnOperation","push","length","duplicateThisOperation","operationToCopy","deleteThisOperation","filter","map","target"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport ChooseOperationComponent from \"./ChooseOperationComponent\";\r\nimport DisplayOperations from \"./OperationForms/DisplayOperations\";\r\nimport TransactionContext from \"../../../Context/TransactionContext\";\r\nimport \"../../../Styles/operation.css\";\r\nconst OperationFormComponent = props => {\r\n    const { operations, setOperations } = useContext(TransactionContext); // look at BuildTransaction.jsx for context provider\r\n\r\n    const handleOperationDataChange = (id,e) => {\r\n        setTimeout(()=>{\r\n            let operationArrayCopy = [...operations];\r\n            let operationToUpdate = operationArrayCopy.find(op=>op.id === id);\r\n            operationToUpdate.operationData = {...operationToUpdate.operationData,[e.name]:[e.value]}\r\n            setOperations(operationArrayCopy)\r\n        },50)\r\n    }\r\n\r\n    // MANAGE OPERATIONS\r\n    const setOperationForThisOne = (operation,id) => { // change selected operation\r\n        let operationArrayCopy = [...operations];\r\n        operationArrayCopy.find((op,i)=>op.id === id).operation = operation;\r\n        setOperations(operationArrayCopy);\r\n    }\r\n    const addAnOperation = () => { // add blank operation\r\n        let operationArrayCopy = [...operations];\r\n        operationArrayCopy.push({operation:'',operationData: {},id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\r\n        setOperations(operationArrayCopy);\r\n    }\r\n    const duplicateThisOperation = (operation,id) => { // duplicate operation\r\n        let operationArrayCopy = [...operations];\r\n        let operationToCopy = operationArrayCopy.find((op,i)=>op.id === id);\r\n        operationArrayCopy.push({...operationToCopy,id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\r\n        setOperations(operationArrayCopy);\r\n    }\r\n    const deleteThisOperation = id => { // delete operation\r\n        let operationArrayCopy = operations.filter((op,i)=>op.id  !== id);\r\n        setOperations(operationArrayCopy);\r\n    }\r\n    // END OF MANAGE OPERATIONS\r\n\r\n    return (\r\n        <div className=\"X X-fd-column row-gap-2-rem\">\r\n            {/* display all operations from array */}\r\n            {operations.map((op,i)=>{\r\n                return (\r\n                    <div className=\"X column-gap-1-rem\" key={i}>\r\n                        <div className=\"X X-fd-column X-ai-center row-gap-4-px\">\r\n                            {/* list placement number */}\r\n                            <div className=\"X X-jc-center X-ai-center operation-number-box\">\r\n                                <h4>{i + 1}</h4>\r\n                            </div>\r\n                            {/* DUPLICATE */}\r\n                            <div className=\"duplicate-operation\" onClick={e=>duplicateThisOperation(op.operation,op.id)}></div>\r\n                            {/* DELETE */}\r\n                            {operations.length > 1 && <div className=\"delete-operation transition-ease\" onClick={e=>deleteThisOperation(op.id)}></div>}\r\n                        </div>\r\n                        <div className=\"X X-fd-column width-100-percent\">\r\n                            {/* select operation type */}\r\n                            <ChooseOperationComponent setOperation={{setOperationForThisOne}} currentOperation={op.operation} id={op.id}/>\r\n                            {/* operation form */}\r\n                            <div id={op.id} onChange={e=>handleOperationDataChange(op.id,e.target)} >\r\n                                <DisplayOperations operation={op.operation} data={op.operationData} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            <div className=\"width-100-percent X X-jc-center\">\r\n                {/* add a blank operation */}\r\n                <div id=\"add-operation\" className=\"transition-ease\" onClick={addAnOperation}></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default OperationFormComponent;"]},"metadata":{},"sourceType":"module"}