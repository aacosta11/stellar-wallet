{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\in-progress\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\TransactionFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionFormComponent = props => {\n  _s();\n\n  const [sourceAccount, setSourceAccount] = useState('');\n  const [onlyNumsTemp, setOnlyNumsTemp] = useState('');\n  const [transactionSequenceNumber, setTransactionSequenceNumber] = useState('');\n  const [baseFee, setBaseFee] = useState(100);\n  const [memo, setMemo] = useState('');\n\n  const handleOnChange = e => {\n    let numStr = parseInt(e.target.value);\n\n    if (!numStr >= 0) {\n      setOnlyNumsTemp('');\n      setTransactionSequenceNumber('');\n    }\n\n    if (numStr.toString().match(/\\d/g)) {\n      setOnlyNumsTemp(numStr);\n      setTransactionSequenceNumber(numStr);\n    } else {\n      setTransactionSequenceNumber(onlyNumsTemp);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"transaction form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source-account\",\n        children: \"Source Account: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"source-account\",\n        value: sourceAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"transaction-sequence-number\",\n        children: \"Transaction Sequence Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"transaction-sequence-number\",\n        onChange: handleOnChange,\n        value: transactionSequenceNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"base-fee\",\n        children: \"Base Fee: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"base-fee\",\n        value: baseFee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"memo\",\n        children: \"Memo: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"memo\",\n        value: memo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time-bounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TransactionFormComponent, \"e8lSOe8iB5axq5MkuxttZrwYGwo=\");\n\n_c = TransactionFormComponent;\nexport default TransactionFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/in-progress/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/TransactionFormComponent.jsx"],"names":["React","useState","TransactionFormComponent","props","sourceAccount","setSourceAccount","onlyNumsTemp","setOnlyNumsTemp","transactionSequenceNumber","setTransactionSequenceNumber","baseFee","setBaseFee","memo","setMemo","handleOnChange","e","numStr","parseInt","target","value","toString","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,wBAAwB,GAAGC,KAAK,IAAI;AAAA;;AACtC,QAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCJ,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACK,YAAD,EAAcC,eAAd,IAAiCN,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACO,yBAAD,EAA2BC,4BAA3B,IAA2DR,QAAQ,CAAC,EAAD,CAAzE;AACA,QAAM,CAACS,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,GAAD,CAArC;AACA,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMa,cAAc,GAAGC,CAAC,IAAI;AACxB,QAAIC,MAAM,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAArB;;AACA,QAAI,CAACH,MAAD,IAAW,CAAf,EAAkB;AACdT,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,4BAA4B,CAAC,EAAD,CAA5B;AACH;;AACD,QAAGO,MAAM,CAACI,QAAP,GAAkBC,KAAlB,CAAwB,KAAxB,CAAH,EAAmC;AAC/Bd,MAAAA,eAAe,CAACS,MAAD,CAAf;AACAP,MAAAA,4BAA4B,CAACO,MAAD,CAA5B;AACH,KAHD,MAGO;AACHP,MAAAA,4BAA4B,CAACH,YAAD,CAA5B;AACH;AACJ,GAZD;;AAaA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,gBAAxB;AAAyC,QAAA,KAAK,EAAEF;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAMA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,6BAAxB;AACA,QAAA,QAAQ,EAAEU,cADV;AAC0B,QAAA,KAAK,EAAEN;AADjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANA,eAWA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXA,eAeA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfA,eAmBA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAnBA;AAAA,kBADJ;AAyBH,CA5CD;;GAAMV,wB;;KAAAA,wB;AA6CN,eAAeA,wBAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TransactionFormComponent = props => {\r\n    const [sourceAccount,setSourceAccount] = useState('');\r\n    const [onlyNumsTemp,setOnlyNumsTemp] = useState('');\r\n    const [transactionSequenceNumber,setTransactionSequenceNumber] = useState('');\r\n    const [baseFee,setBaseFee] = useState(100);\r\n    const [memo,setMemo] = useState('');\r\n    const handleOnChange = e => {\r\n        let numStr = parseInt(e.target.value);\r\n        if (!numStr >= 0) {\r\n            setOnlyNumsTemp('');\r\n            setTransactionSequenceNumber('');\r\n        }\r\n        if(numStr.toString().match(/\\d/g)) {\r\n            setOnlyNumsTemp(numStr);\r\n            setTransactionSequenceNumber(numStr);\r\n        } else {\r\n            setTransactionSequenceNumber(onlyNumsTemp);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <h4>transaction form</h4>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"source-account\">Source Account: </label>\r\n            <input type=\"text\" name=\"source-account\" value={sourceAccount}/>\r\n        </div>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"transaction-sequence-number\">Transaction Sequence Number: </label>\r\n            <input type=\"text\" name=\"transaction-sequence-number\"\r\n            onChange={handleOnChange} value={transactionSequenceNumber}/>\r\n        </div>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"base-fee\">Base Fee: </label>\r\n            <input type=\"text\" name=\"base-fee\" value={baseFee}/>\r\n        </div>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"memo\">Memo: </label>\r\n            <input type=\"text\" name=\"memo\" value={memo}/>\r\n        </div>\r\n        <div className=\"X X-fd-column\">\r\n            <label htmlFor=\"time-bounds\"></label>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default TransactionFormComponent;"]},"metadata":{},"sourceType":"module"}