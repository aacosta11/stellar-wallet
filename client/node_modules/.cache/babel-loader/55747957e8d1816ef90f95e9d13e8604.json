{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\in-progress\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\OperationFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ChooseOperationComponent from \"./ChooseOperationComponent\";\nimport AllOperations from \"./OperationForms/AllOperations\"; // import ManageOperations from \"./Options/ManageOperations\";\n\nimport \"../../../Styles/operation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OperationFormComponent = props => {\n  _s();\n\n  const allOperations = { ...AllOperations\n  }; // const { setOperationForThisOne, addAnOperation, duplicateThisOperation, deleteThisOperation } = ManageOperations;\n\n  const [currentOperations, setCurrentOperations] = useState([{\n    operation: '',\n    operationData: '',\n    id: 1\n  }]);\n\n  const handleFormData = e => {}; // // MANAGE OPERATIONS\n  // const setOperationForThisOne = (operation,id) => { // change selected operation\n  //     let operationArrayCopy = [...currentOperations];\n  //     operationArrayCopy.find((op,i)=>op.id === id).operation = operation;\n  //     setCurrentOperations(operationArrayCopy);\n  // }\n  // const addAnOperation = () => { // add blank operation\n  //     let operationArrayCopy = [...currentOperations];\n  //     operationArrayCopy.push({operation:'',operationData: '',id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\n  //     setCurrentOperations(operationArrayCopy);\n  // }\n  // const duplicateThisOperation = (operation,id) => { // duplicate operation\n  //     let operationArrayCopy = [...currentOperations];\n  //     let operationToCopy = operationArrayCopy.find((op,i)=>op.id === id); // XXX\n  //     operationArrayCopy.push({...operationToCopy,id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\n  //     setCurrentOperations(operationArrayCopy);\n  // }\n  // const deleteThisOperation = id => { // delete operation\n  //     let operationArrayCopy = currentOperations.filter((op,i)=>op.id  !== id);\n  //     console.log(operationArrayCopy)\n  //     setCurrentOperations(operationArrayCopy);\n  // }\n  // // END OF MANAGE OPERATIONS\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"X X-fd-column row-gap-2-rem\",\n    children: [currentOperations.map((op, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"X column-gap-1-rem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"X X-fd-column X-ai-center row-gap-4-px\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"X X-jc-center X-ai-center operation-number-box\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duplicate-operation\",\n            onClick: e => duplicateThisOperation(op.operation, op.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), i !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete-operation transition-ease\",\n            onClick: e => deleteThisOperation(op.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"X X-fd-column width-100-percent\",\n          children: [/*#__PURE__*/_jsxDEV(ChooseOperationComponent, {\n            setOperation: {\n              setOperationForThisOne\n            },\n            currentOperation: op.operation,\n            id: op.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), allOperations[op.operation]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width-100-percent X X-jc-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"add-operation\",\n        className: \"transition-ease\",\n        onClick: addAnOperation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), JSON.stringify(currentOperations)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OperationFormComponent, \"6pQogXNuF7jsyMN3MpMdEdkMHdg=\");\n\n_c = OperationFormComponent;\nexport default OperationFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperationFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/in-progress/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/OperationFormComponent.jsx"],"names":["React","useState","ChooseOperationComponent","AllOperations","OperationFormComponent","props","allOperations","currentOperations","setCurrentOperations","operation","operationData","id","handleFormData","e","map","op","i","duplicateThisOperation","deleteThisOperation","setOperationForThisOne","addAnOperation","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,aAAP,MAA0B,gCAA1B,C,CACA;;AACA,OAAO,+BAAP;;;AACA,MAAMC,sBAAsB,GAAGC,KAAK,IAAI;AAAA;;AACpC,QAAMC,aAAa,GAAG,EAAC,GAAGH;AAAJ,GAAtB,CADoC,CAEpC;;AACA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,CAAC;AAACQ,IAAAA,SAAS,EAAC,EAAX;AAAeC,IAAAA,aAAa,EAAE,EAA9B;AAAkCC,IAAAA,EAAE,EAAC;AAArC,GAAD,CAAD,CAA1D;;AAEA,QAAMC,cAAc,GAAGC,CAAC,IAAI,CAE3B,CAFD,CALoC,CASpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA,eAEKN,iBAAiB,CAACO,GAAlB,CAAsB,CAACC,EAAD,EAAIC,CAAJ,KAAQ;AAC3B,0BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,wCAAf;AAAA,kCAEI;AAAK,YAAA,SAAS,EAAC,gDAAf;AAAA,mCACI;AAAA,wBAAKA,CAAC,GAAG;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAqC,YAAA,OAAO,EAAEH,CAAC,IAAEI,sBAAsB,CAACF,EAAE,CAACN,SAAJ,EAAcM,EAAE,CAACJ,EAAjB;AAAvE;AAAA;AAAA;AAAA;AAAA,kBANJ,EAQKK,CAAC,KAAK,CAAN,iBAAW;AAAK,YAAA,SAAS,EAAC,kCAAf;AAAkD,YAAA,OAAO,EAAEH,CAAC,IAAEK,mBAAmB,CAACH,EAAE,CAACJ,EAAJ;AAAjF;AAAA;AAAA;AAAA;AAAA,kBARhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,kCAEI,QAAC,wBAAD;AAA0B,YAAA,YAAY,EAAE;AAACQ,cAAAA;AAAD,aAAxC;AAAkE,YAAA,gBAAgB,EAAEJ,EAAE,CAACN,SAAvF;AAAkG,YAAA,EAAE,EAAEM,EAAE,CAACJ;AAAzG;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIKL,aAAa,CAACS,EAAE,CAACN,SAAJ,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA,SAAyCO,CAAzC;AAAA;AAAA;AAAA;AAAA,cADJ;AAqBH,KAtBA,CAFL,eAyBI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,6BAEI;AAAK,QAAA,EAAE,EAAC,eAAR;AAAwB,QAAA,SAAS,EAAC,iBAAlC;AAAoD,QAAA,OAAO,EAAEI;AAA7D;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAzBJ,EA8BKC,IAAI,CAACC,SAAL,CAAef,iBAAf,CA9BL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAnED;;GAAMH,sB;;KAAAA,sB;AAoEN,eAAeA,sBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ChooseOperationComponent from \"./ChooseOperationComponent\";\r\nimport AllOperations from \"./OperationForms/AllOperations\";\r\n// import ManageOperations from \"./Options/ManageOperations\";\r\nimport \"../../../Styles/operation.css\";\r\nconst OperationFormComponent = props => {\r\n    const allOperations = {...AllOperations};\r\n    // const { setOperationForThisOne, addAnOperation, duplicateThisOperation, deleteThisOperation } = ManageOperations;\r\n    const [currentOperations, setCurrentOperations] = useState([{operation:'', operationData: '', id:1}]);\r\n    \r\n    const handleFormData = e => {\r\n\r\n    }\r\n\r\n    // // MANAGE OPERATIONS\r\n    // const setOperationForThisOne = (operation,id) => { // change selected operation\r\n    //     let operationArrayCopy = [...currentOperations];\r\n    //     operationArrayCopy.find((op,i)=>op.id === id).operation = operation;\r\n    //     setCurrentOperations(operationArrayCopy);\r\n    // }\r\n    // const addAnOperation = () => { // add blank operation\r\n    //     let operationArrayCopy = [...currentOperations];\r\n    //     operationArrayCopy.push({operation:'',operationData: '',id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\r\n    //     setCurrentOperations(operationArrayCopy);\r\n    // }\r\n    // const duplicateThisOperation = (operation,id) => { // duplicate operation\r\n    //     let operationArrayCopy = [...currentOperations];\r\n    //     let operationToCopy = operationArrayCopy.find((op,i)=>op.id === id); // XXX\r\n    //     operationArrayCopy.push({...operationToCopy,id:operationArrayCopy[operationArrayCopy.length - 1].id + 1});\r\n    //     setCurrentOperations(operationArrayCopy);\r\n    // }\r\n    // const deleteThisOperation = id => { // delete operation\r\n    //     let operationArrayCopy = currentOperations.filter((op,i)=>op.id  !== id);\r\n    //     console.log(operationArrayCopy)\r\n    //     setCurrentOperations(operationArrayCopy);\r\n    // }\r\n    // // END OF MANAGE OPERATIONS\r\n\r\n    return (\r\n        <div className=\"X X-fd-column row-gap-2-rem\">\r\n            {/* display all operations from array */}\r\n            {currentOperations.map((op,i)=>{\r\n                return (\r\n                    <div className=\"X column-gap-1-rem\" key={i}>\r\n                        <div className=\"X X-fd-column X-ai-center row-gap-4-px\">\r\n                            {/* list placement number */}\r\n                            <div className=\"X X-jc-center X-ai-center operation-number-box\">\r\n                                <h4>{i + 1}</h4>\r\n                            </div>\r\n                            {/* DUPLICATE */}\r\n                            <div className=\"duplicate-operation\" onClick={e=>duplicateThisOperation(op.operation,op.id)}></div>\r\n                            {/* DELETE */}\r\n                            {i !== 0 && <div className=\"delete-operation transition-ease\" onClick={e=>deleteThisOperation(op.id)}></div>}\r\n                        </div>\r\n                        <div className=\"X X-fd-column width-100-percent\">\r\n                            {/* select operation type */}\r\n                            <ChooseOperationComponent setOperation={{setOperationForThisOne}} currentOperation={op.operation} id={op.id}/>\r\n                            {/* operation form */}\r\n                            {allOperations[op.operation]}\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            <div className=\"width-100-percent X X-jc-center\">\r\n                {/* add a blank operation */}\r\n                <div id=\"add-operation\" className=\"transition-ease\" onClick={addAnOperation}></div>\r\n            </div>\r\n\r\n            {JSON.stringify(currentOperations)}\r\n        </div>\r\n    )\r\n}\r\nexport default OperationFormComponent;"]},"metadata":{},"sourceType":"module"}