{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\code\\\\stellar\\\\stellar-wallet\\\\src\\\\Components\\\\BuildTransaction\\\\Transaction\\\\TransactionFormComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport FilterInputs from \"../../Shared/FilterInputs\";\nimport TransactionContext from \"../../../Context/TransactionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionFormComponent = props => {\n  _s();\n\n  const {\n    replaceSpecialCharacters,\n    onlyNumbers,\n    onlyIntegers\n  } = FilterInputs;\n  const {\n    transactionBaseInfo,\n    setTransactionBaseInfo\n  } = useContext(TransactionContext); // handle all number inputs\n\n  const handleNumberInputChange = e => {\n    // store element data\n    let inputName = e.target.name;\n    let inputVariable = onlyNumbers(replaceSpecialCharacters(e.target.value)); // set appropriate state variables to input value\n\n    inputName === \"transactionSequenceNumber\" ? setTransactionBaseInfo({ ...transactionBaseInfo,\n      [inputName]: [inputVariable]\n    }) : setTransactionBaseInfo({ ...transactionBaseInfo,\n      [inputName]: [onlyIntegers(inputVariable)]\n    });\n  }; // handle source account input\n\n\n  const handleSourceAccountChange = e => setTransactionBaseInfo({ ...transactionBaseInfo,\n    sourceAccount: [replaceSpecialCharacters(e.target.value).toUpperCase()]\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"TransactionFormComponent.jsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sourceAccount\",\n        children: \"Source Account: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"source-account\",\n        onChange: handleSourceAccountChange,\n        value: transactionBaseInfo.sourceAccount,\n        placeholder: \"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"transactionSequenceNumber\",\n        children: \"Transaction Sequence Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"transactionSequenceNumber\",\n        onChange: handleNumberInputChange,\n        value: transactionBaseInfo.transactionSequenceNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"baseFee\",\n        children: \"Base Fee: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"baseFee\",\n        onChange: handleNumberInputChange,\n        value: transactionBaseInfo.baseFee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"memo\",\n        children: \"Memo: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"memo\",\n        onChange: e => setTransactionBaseInfo({ ...transactionBaseInfo,\n          memo: [e.target.value]\n        }),\n        value: transactionBaseInfo.memo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"X X-fd-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"timeBounds\",\n        children: \"Time Bounds: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"timeBounds\",\n        onChange: handleNumberInputChange,\n        value: transactionBaseInfo.timeBounds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), JSON.stringify(transactionBaseInfo)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionFormComponent, \"XMYOj1YRu0JnYmd0/10XEykIjaQ=\");\n\n_c = TransactionFormComponent;\nexport default TransactionFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionFormComponent\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/code/stellar/stellar-wallet/src/Components/BuildTransaction/Transaction/TransactionFormComponent.jsx"],"names":["React","useContext","FilterInputs","TransactionContext","TransactionFormComponent","props","replaceSpecialCharacters","onlyNumbers","onlyIntegers","transactionBaseInfo","setTransactionBaseInfo","handleNumberInputChange","e","inputName","target","name","inputVariable","value","handleSourceAccountChange","sourceAccount","toUpperCase","transactionSequenceNumber","baseFee","memo","timeBounds","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport FilterInputs from \"../../Shared/FilterInputs\";\r\nimport TransactionContext from \"../../../Context/TransactionContext\";\r\nconst TransactionFormComponent = props => {\r\n    const { replaceSpecialCharacters, onlyNumbers, onlyIntegers } = FilterInputs;\r\n    const { transactionBaseInfo,setTransactionBaseInfo } = useContext(TransactionContext);\r\n\r\n\r\n    // handle all number inputs\r\n    const handleNumberInputChange = e => {\r\n        // store element data\r\n        let inputName = e.target.name;\r\n        let inputVariable = onlyNumbers(replaceSpecialCharacters(e.target.value));\r\n        // set appropriate state variables to input value\r\n        inputName === \"transactionSequenceNumber\" ? setTransactionBaseInfo({...transactionBaseInfo,[inputName]:[inputVariable]})\r\n        : setTransactionBaseInfo({...transactionBaseInfo,[inputName]:[onlyIntegers(inputVariable)]})\r\n    };\r\n\r\n    // handle source account input\r\n    const handleSourceAccountChange = e => setTransactionBaseInfo({\r\n        ...transactionBaseInfo,\r\n        sourceAccount:[replaceSpecialCharacters(e.target.value).toUpperCase()]\r\n        });\r\n\r\n    return (\r\n        <div>\r\n            <h4>TransactionFormComponent.jsx</h4>\r\n\r\n            {/* Source Account */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"sourceAccount\">Source Account: </label>\r\n                <input type=\"text\" name=\"source-account\"\r\n                onChange={handleSourceAccountChange} value={transactionBaseInfo.sourceAccount}\r\n                placeholder=\"ex: GDPABHSV5BK3SW3ZWXDW6C4FJM3JD4R4YJ4VDZCJTA5YZXTQKWPIW4B4\"\r\n                />\r\n            </div>\r\n\r\n            {/* Transaction Sequence Number */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"transactionSequenceNumber\">Transaction Sequence Number: </label>\r\n                <input type=\"text\" name=\"transactionSequenceNumber\"\r\n                onChange={handleNumberInputChange} value={transactionBaseInfo.transactionSequenceNumber}/>\r\n            </div>\r\n\r\n            {/* Base Fee */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"baseFee\">Base Fee: </label>\r\n                <input type=\"text\" name=\"baseFee\"\r\n                onChange={handleNumberInputChange} value={transactionBaseInfo.baseFee}/>\r\n            </div>\r\n\r\n            {/* Memo */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"memo\">Memo: </label>\r\n                <input type=\"text\" name=\"memo\" \r\n                onChange={e=>setTransactionBaseInfo({...transactionBaseInfo,memo:[e.target.value]})} value={transactionBaseInfo.memo}/>\r\n            </div>\r\n\r\n            {/* Time Bounds */}\r\n            <div className=\"X X-fd-column\">\r\n                <label htmlFor=\"timeBounds\">Time Bounds: </label>\r\n                <input type=\"text\" name=\"timeBounds\"\r\n                onChange={handleNumberInputChange} value={transactionBaseInfo.timeBounds}/>\r\n            </div>\r\n\r\n            {JSON.stringify(transactionBaseInfo)}\r\n        </div>\r\n    )\r\n}\r\nexport default TransactionFormComponent;"]},"metadata":{},"sourceType":"module"}